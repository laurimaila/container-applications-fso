services:
  app:
    image: todo-front-dev
    build:
      context: ./todo-frontend # The context will pick this directory as the "build context"
      dockerfile: dev.Dockerfile # This will simply tell which dockerfile to read
    volumes:
      - ./todo-frontend:/usr/src/app # The path can be relative, so ./ is enough to say "the same location as the docker-compose.yml"
    #    ports:
    #      - 3001:3000
    environment:
      - REACT_APP_BACKEND_URL=http://localhost:8080/api/
    container_name: todo-front-dev # This will name the container hello-front-dev
  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy
    depends_on:
      - app # wait for the frontend container to be started  
      - server

  server:
    # The name of the service, can be anything
    image: todo-backend-dev # Declares which image to use
    build:
      context: ./todo-backend
      dockerfile: dev.Dockerfile
    volumes:
      - ./todo-backend:/usr/src/app
    #    ports:
    #      - 3000:3000
    environment:
      - REDIS_URL=redis://redis:6379
      - MONGO_URL=mongodb://the_username:the_password@mongo:27017/the_database
    depends_on:
      - mongo
      - redis

  mongo:
    image: mongo
#    ports:
#      - 3456:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js

  redis:
    image: redis
#    ports:
#      - 3457:6379
    command: redis-server --appendonly yes
    volumes:
      - ./todo-backend/redis_data:/data
