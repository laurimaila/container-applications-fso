services:
  frontend-dev:
    image: todo-front-dev
    container_name: todo-front-dev
    build:
      context: ./todo-frontend # The context will pick this directory as the "build context"
      dockerfile: dev.Dockerfile # This will simply tell which dockerfile to read
    volumes:
      - ./todo-frontend:/usr/src/app # The path can be relative, so ./ is enough to say "the same location as the docker-compose.yml"
      - /usr/src/app/node_modules # This is a special volume that will be used to cache the node_modules folder
    environment:
      - REACT_APP_BACKEND_URL=http://localhost:8080/api/

  nginx:
    image: nginx:1.20.1
    container_name: reverse-proxy
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    depends_on:
      - frontend-dev # wait for the frontend container to be started  
      - backend-dev

  backend-dev:
    image: todo-back-dev
    container_name: todo-back-dev
    build:
      context: ./todo-backend
      dockerfile: dev.Dockerfile
    environment:
      - REDIS_URL=redis://redis:6379
      - MONGO_URL=mongodb://the_username:the_password@mongo:27017/the_database
    depends_on:
      - mongo
      - redis

  mongo:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js

  redis:
    image: redis
    command: redis-server --appendonly yes
    volumes:
      - ./todo-backend/redis_data:/data
